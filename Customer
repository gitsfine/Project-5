import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class Customer extends User {

    boolean seller = false;
    ArrayList<String> cart = new ArrayList<>();
    ArrayList<String> purchased = new ArrayList<>();

    public Customer(String username, String password, String email, boolean seller) {
        super(username, password, email, seller);
    }

    //"buy" method

    public void buy(Product prod, int numberBought) {
        prod.sell(numberBought);
        addProductToPurchased(prod);
        //must also edit the file to reflect the purchase
    }


    //"addToCart" method
    //this takes in a product and adds a string representation to the cart Array list.
    public void addProductToCart(Product product) {
        String cartValue = String.format("%s, %s, %s, %.2f", product.getStoreName(), product.getProductName(), product.getDescription(), product.getPrice());
        cart.add(cartValue);
    }
    //"addToCart" method
    //do not use. this is for the processData() method.
    public void addStringToCart(String line) {
        cart.add(line);
    }

    //"addToPurchased" method
    //this takes in a product and adds a string representation to the purchased Array list.
    public void addProductToPurchased(Product product) {
        String purchasedValue = String.format("%s, %s, %s, %.2f", product.getStoreName(), product.getProductName(), product.getDescription(), product.getPrice());
        purchased.add(purchasedValue);
    }
    //"addToPurchased" method
    //do not use. this is for the processData() method.
    public void addStringToPurchased(String line) {
        purchased.add(line);
    }


    //"editCard"
    public void editCart() {
        //prints out each element of the cart
        for (int i = 0; i < cart.size(); i++) {
            System.out.print(cart.get(i) + "\n");
        }
        System.out.println("What would you like to edit?");
    }


    //getters and setters
    public boolean isSeller() {
        return seller;
    }

    public void setSeller(boolean seller) {
        this.seller = seller;
    }

    public ArrayList<String> getCart() {
        return cart;
    }

    public void setCart(ArrayList<String> cart) {
        this.cart = cart;
    }

    public ArrayList<String> getPurchased() {
        return purchased;
    }

    public void setPurchased(ArrayList<String> purchased) {
        this.purchased = purchased;
    }

    public void printStatistics() {
        HashMap<String, Integer> productsBoughtCount = new HashMap<>();
        HashMap<String, Set<String>> productsBoughtFromStore = new HashMap<>();
        for (String sale : purchased) {
            String[] splitSale = sale.split(",");
            String storeName = splitSale[0];
            String productName = splitSale[1];
            productsBoughtCount.put(productName, productsBoughtCount.getOrDefault(productName, 0) + 1);
            Set<String> products = productsBoughtFromStore.getOrDefault(storeName, new HashSet<>());
            products.add(productName);
            productsBoughtFromStore.put(storeName, products);
        }

        System.out.println("Product Name, Quantity");
        for (Map.Entry<String, Integer> e : productsBoughtCount.entrySet()) {
            System.out.println(e.getKey() + "," + e.getValue());
        }
        for (Map.Entry<String, Set<String>> e : productsBoughtFromStore.entrySet()) {
            System.out.println("Store: " + e.getKey());
            for (String product : e.getValue()) {
                System.out.println(product);
            }
        }
    }

    public void exportFile() {
        ArrayList<String> data = Marketplace.readData();
        String variable = this.getUsername();

        int purchasesIndex = 0;
        for (int i = 0; i < data.size(); i++) {
            if (data.get(i).equals(variable)) {
                int usernameIndex = i;
                System.out.printf("%d\n", usernameIndex);
                for (int j = usernameIndex; j < data.size(); j++) {
                    if (data.get(j).equals("*PURCHASES*")) {
                        purchasesIndex = j;
                        System.out.printf("%d\n", purchasesIndex);
                        break;
                    }
                }
            }
        }

        try {
            System.out.printf("What would you like your new file to be called?\n");
            String newFileName = Marketplace.scanner.nextLine();

            File file = new File(newFileName);
            file.createNewFile();
            FileWriter writer = new FileWriter(file);

            for (int i = purchasesIndex; i < data.size(); i++) {
                if ((data.get(i).charAt(0) == 42) && (i != purchasesIndex)) {
                   break;
                } else {
                    String line = String.format("%s\n", data.get(i));
                    writer.write(line);
                }
            }

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
